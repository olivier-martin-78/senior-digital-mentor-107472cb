
export const isHeicFile = (file: File): boolean => {
  const hasHeicType = file.type === 'image/heic' || file.type === 'image/heif';
  const hasHeicExtension = file.name.toLowerCase().endsWith('.heic') || file.name.toLowerCase().endsWith('.heif');
  
  console.log('üîç D√©tection HEIC:', {
    fileName: file.name,
    fileType: file.type,
    fileSize: file.size,
    hasHeicType,
    hasHeicExtension,
    isHeic: hasHeicType || hasHeicExtension
  });
  
  return hasHeicType || hasHeicExtension;
};

export const convertHeicToJpeg = async (file: File): Promise<File> => {
  // Cette fonction est maintenant g√©r√©e c√¥t√© serveur
  // Pour le moment, on retourne le fichier tel quel
  console.log('‚ö†Ô∏è Conversion HEIC locale d√©sactiv√©e - utilisation du serveur');
  
  // En attendant l'impl√©mentation serveur compl√®te, on sugg√®re √† l'utilisateur
  // de convertir le fichier avant l'upload
  throw new Error(
    'Les fichiers HEIC doivent √™tre convertis avant l\'upload. ' +
    'Sur iPhone, activez "Plus compatible" dans R√©glages > Appareil photo > Formats ' +
    'pour prendre des photos en JPEG.'
  );
};

export const processImageFile = async (file: File): Promise<File> => {
  console.log('üîç Traitement du fichier:', {
    name: file.name,
    type: file.type,
    size: Math.round(file.size / 1024) + 'KB',
    isHeicDetected: isHeicFile(file)
  });
  
  // V√©rification de base
  if (!file) {
    throw new Error('Aucun fichier s√©lectionn√©');
  }
  
  // Pour les fichiers HEIC, sugg√©rer la conversion avant upload
  if (isHeicFile(file)) {
    console.log('üì± Fichier HEIC d√©tect√© - conversion requise avant upload');
    throw new Error(
      'Les fichiers HEIC ne sont pas support√©s pour l\'upload. ' +
      'Veuillez convertir vos images en JPEG avant de les t√©l√©charger. ' +
      'Sur iPhone : R√©glages > Appareil photo > Formats > "Plus compatible".'
    );
  }
  
  console.log('‚úÖ Fichier standard, aucune conversion n√©cessaire');
  return file;
};
